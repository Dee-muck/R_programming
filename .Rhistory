x<-1:100
x
summary(x)
x<-0:100
summary(x)
library(datasets)
s<-split(airquality, airquality$Month)
s
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(6)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(6)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0,5+2*x+e
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
sumary(y)
summary(y)
plot(x,y)
plot(z,sin(z)/z)
z<-rnorm(100000)
plot(z,sin(z)/z)
z<-rnorm(100000,0,20)
plot(z,sin(z)/z)
z<-rnorm(100000,0,200)
plot(z,sin(z)/z)
z<-rnorm(100000,0,20)
plot(z,sin(z)/z)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(pants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,prob=(0.3,0.7))
flips<-sample(c(0,1),100,replacement=TRUE,prob=(0.3,0.7))
flips<-sample(c(0,1), 100, replace=TRUE, prob=(0.3, 0.7))
flips<-sample(c(0,1), 100)
flips<-sample(c(0,1), 100, replace=TRUE)
flips<-sample(c(0,1), 100, replace=TRUE, prob=(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0,7)
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0,7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
cm
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(speed,dit)
plot(speed,dist)
plot(cars$speed,cars$dist)
plot(cars$dist, cars$speed)
?plot
plot(cars$dist, cars$speed, xlab=Speed)
plot(cars$dist, cars$speed)
plot(cars$dist, cars$speed, xlab="Speed")
plot(x=cars$dist, y=cars$speed, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, main="My Plot" ,xlab="Speed", ylab="Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub="My Plot Subtitle")
plot(cars, sub="My Plot Subtitle")
?par
plot(cars, col=2)
plot(cars, xlim=c(10,15))
?points
plot(cars, pch=2)
data(mtcars)
play()
head(mtcars)
dim(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(mpg~cyl, data=mtcars)
hist(mtcars$mpg)
system.time(readlines("http://www.jhsph.edu"))
system.time(readLines("http://www.jhsph.edu"))
system.time(readLines("http://www.zorky.ru"))
system.time(readLines("http://www.yandex.ru"))
system.time(readLines("http://www.alfabank.ru.ru"))
system.time(readLines("http://www.alfabank.ru"))
summary.rprof()
summary.Rprof()
summary.Rprof()
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?pois
x <- rep(0:1, each = 5)
?qpois
?dpois
?qpois
getwd
getwd()
setwd(assignment3-data\)
setwd(assignment3-data)
setwd(Assignment3-data)
?gl
?df
setwd(usr/dimak/r/Assignment3-data)
setwd(/usr/dimak/r/Assignment3-data)
setwd(dimak/r/Assignment3-data)
getwd()
setwd(/Users/Dimak/R/Assignment3-data)
setwd(Users/Dimak/R/Assignment3-data)
install.packages("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases:")
result<-dbGetQuery(ucscDb,"show databases;")
dbDisconnect(ucscDb)
result
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
lenght(allTables)
length(allTables)
dbDisconnect(ucscDb)
dbDisconnect(hg19)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
dbListFields(hg19,"affyU133Plus2")
dbDisconnect(hg19)
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
dbDisconnect(hg19)
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
affyData<-dbReadTable(hg19, "affyU133Plus2")
warnings()
head(affyData)
dbDisconnect(hg19)
query<-dbSendQuery(hg19,"select * from afffyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query)
quantile(affyMis$misMatches)
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
query<-dbSendQuery(hg19,"select * from afffyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query)
quantile(affyMis$misMatches)
query<-dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query)
quantile(affyMis$misMatches)
affyMisSmal<-fetch(query,n=10)
dbClearResult(query)
dim(affyMisSmal)
dbDisconnect(hg19)
rm(list=ls())
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
con=url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode=readLines(con)
close(con)
htmlCode
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
library(XML)
html<-htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html,"//title", xmlValue)
xpathSApply(html,"//td[@id=col-citedby", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
xpathSApply(html, "//td [@class='gsc_a_c']", xmlValue)  # number of citations
xpathSApply(html, "//a [@class='gsc_a_ac']", xmlValue)  # number of citations
xpathSApply(html, "//td [@class='gsc_a_t']", xmlValue)
xpathSApply(html, "//td [@class='gsc_a_y']", xmlValue)
library(httr)
html2=GET(url)
content2=content(html2,as="text")
parsedHtml=htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml,"//title", xmlValue)
pg=GET("http://httpbin.org/basic-auth/user/passwd")
pg
pg=GET("http://httpbin.org/basic-auth/user/passwd",
authenticate("user","passwd"))
pg
names(pg)
pg$content
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?stop_for_status
?content
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
install.package("httpuv")
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
jsondata<-fromJSON(content(req))
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
demo("oauth2-github", package = "httr", ask = FALSE)
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
jsondata<-content(req)
head(jsondata)
json1[[5]]$created_at
jsondata[[5]]$created_at
jsondata[[1]]$created_at
jsondata[[2]]$created_at
jsondata[[2]]
jsondata[[1]]
jsondata[[3]]
jsondata[[4]]
jsondata
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
jsondata<-content(req)
jsondata
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
jsondata<-frmJSON(content(req))
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
jsondata<-fromJSON(content(req))
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
##req <- GET("https://api.github.com/rate_limit", gtoken)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
jsondata<-fromJSON(content(req))
req
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
##req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
jsondata<-fromJSON(content(req))
jsondata<-content(req)
jsondata
library(httr)
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5c626b9c606f5d6880cb",
secret = "dbd655e155b8fdeb8e52046fe59af07efcb0fc60")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
##req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
jsondata<-fromJSON(content(req))
jsondata<-content(req)
jsondata[[5]]
jsondata[[6]]
jsondata[[6]]$created_at
jsondata[[6]]$name
jsondata[[5]]$name
jsondata[[4]]$name
jsondata[[7]]$name
jsondata[[8]]$name
jsondata[[8]]$created_at
for (i in 1:length(jsondata)) {
repo <- jsondata[[i]]
if (repo$name == "datasharing") {
ds_repo = repo
}
ds_repo$created_at
for (i in 1:length(jsondata)) {
repo <- jsondata[[i]]
if (repo$name == "datasharing") {
ds_repo = repo
}
}
ds_repo$created_at
install.packages("sqldf")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "/acs.csv", method=curl)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "/acs.csv", method="curl")
list.files()
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "./Dimak/R/acs.csv", method="curl")
getwd()
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "./Users/Dimak/R"acs.csv", method="curl")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "./Users/Dimak/R/acs.csv", method="curl")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
## Downloadig file
download.file(fileUrl, destfile="./quizd.csv", method ="curl")
## Downloadig file
download.file(fileUrl, destfile="./quizd11.csv", method ="curl")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "./acs.csv", method="curl")
sqldf("select pwgtp1 from acs")
library(sqldf)
sqldf("select pwgtp1 from acs")
acs <- read.csv("acs.csv", header = TRUE, sep = ",")
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
htmlCode[40]
nchar(htmlCode[40])
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
nchar(htmlCode[c(10, 20, 30, 100)])
fileUrl<-"http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
download.file(fileUrl,destfile = "./numbers.for")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl,destfile = "./numbers.for", method="curl")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl,destfile = "./numbers1.for", method="curl")
data <- read.fwf("numbers.for", skip = 4, widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
head(data)
sum(data[,4])
data <- read.fwf("numbers.for", skip = 4, widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),col.names=c("Week", "Nino12SST", "Nino12SSTA", "Nino3SST", "Nino3SSTA", "Nino34SST", "Nino34SSTA", "Nino4SST", "Nino4SSTA"))
head(data)
sum(data[,4])
x<-c(1,2,3,4)
x[1]
x[0]
x[-1]
summary(acs)
summary(data)
object.size(acs)
object.size(acs, units ='Mb')
print(object.size(acs), units ="Mb")
install.packages(Hmisc)
library(Hmisc)
install.packages(Hmisc)
install.packages("Hmisc")
?relevel
library(reshape2)
lubrary(dplyr)
install.packages("dplyr")
merged_data <- merge(GDP.Data, GDP.edData, by = "CountryCode")
fileUrl3<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
## Downloadig file
download.file(fileUrl3, destfile="./GDP.csv", method ="curl")
library(data.table)
## assigning data table to variable
GDP.Data = fread("GDP.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
fileUrl4<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
## Downloadig file
download.file(fileUrl4, destfile="./GDP_ed.csv", method ="curl")
## assigning data table to variable
GDP.edData <- fread("GDP_ed.csv")
merged_data <- merge(GDP.Data, GDP.edData, by = "CountryCode")
library(plyr)
merged_data<-rename(merged_data, c("Income Group" = "Income_Group"))
library(dplyr)
merged_data%>%
select(Income_Group,Rank) %>%
group_by(Income_Group)%>%
summarize(mean(Rank, na.rm=TRUE))%>%
print
getwd()
