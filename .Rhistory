setwd("~/R")
second(5)
lm()
dir()
getwd()
?rm()
ls()
source("myfunction.r")
ls()
second(12)
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?с
?c
я
я
z
c(z, 555, я)
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
z<-9
x<-9
ls()
dir()
?list.files
swirl()
args(list.files)
old.dir<-getwd()
?dir.create()
dir.create(old.dir)
dir.create(testdir)
info()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.r")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R","folder1","Folder2")
file.path("mytest3.R","folder1","Folder2")
file.path(folder1","Folder2")
file.path("folder1","folder2")
?dir.create
dir.creAte(filepath("testdir2","testdir3"),recursive=TRUE)
dir.create(filepath("testdir2","testdir3"),recursive=TRUE)
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
?unlink
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
getwd()
for (i in 1:10){}
for (i in 1:10){}
for (i in 1:10){print (i)}
for (i in 1:10){   print (i)}
for (i in 1:10){   print (i)}
?seq_along
library(swirl)
swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5 NOT= 7
5NOT=7
5NOT==7
5 NOT== 7
5 NOT == 7
5=7
5==7
NOT 5==7
info()
?NOT
??NOT
!5==7
FALSE&FALSE
TRUE
| & c(TRUE, FALSE, FALSE)
TRUE& c(TRUE, FALSE, FALSE)
TRUE&& c(TRUE, FALSE, FALSE)
TRUE| c(TRUE, FALSE, FALSE)
TRUE|| c(TRUE, FALSE, FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<-sampe(10)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
0
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <-function(x,n) {
use<- x > n
x[use]
}
above(10)
x<-1:20
above(x,12)
above <-function(x,n=10) {
use<- x > n
x[use]
}
above(x)
airquality
columnmean <- function(x){
nc <-ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means <-mean(x[,i])
}
}
columnmean <- function(x){
nc <-ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means <-mean(x[,i])
}
means
}
means(airquality)
columnmean(airquality)
columnmean <- function(x){
nc <-ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <-mean(x[,i])
}
means
}
columnmean(airquality)
?narm
?na.rm
columnmean <- function(x, removeNA=TRUE){
nc <-ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <-mean(x[,i], na.rm<-removeNA)
}
means
}
columnmean(airquality)
columnmean <- function(x, removeNA = TRUE){
nc <-ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <-mean(x[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
?mean
?lm
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
play()
telegram("kkkk")
telegram("kkkk")
telegram("kkkk")
telegram("kkkk")
telegram("kkkk")
nxt()
submit()
telegram("Hello World")
submit()
> mad_libs(place = "Kiev", adjustive = "disgusting", noun = "Lenin")
> mad_libs(place = "Kiev", adjective = "disgusting", noun = "Lenin")
?mad_libs
args(mad_libs)
play()
mad_libs(place = "Kiev", adjective = "disgusting", noun = "Lenin")
nxt()
submit()
submit()
I%p%love%p%lR!
"I"%p%"love"%p%"R!"
y<-10
f<-function(x){}
source('/var/folders/hd/670hybp97yj18j_spfsvc5zm0000gn/T//RtmpxxK1o7/bin_op.R')
f<-function(x){ y<-2}
y<-10
f<-function(x){
y<-2
y^2+g(x)
}
g<-function(x){
x*y
}
f(3)
ls(environment(f))
get(g,environment(f))
get("g",environment(f))
get("y",environment(f))
swirl()
x<-as.Date("2016-01-14")
x
unclass(x)
unclass(x)/365
unclass(x)/365.5
x<-as.Date("1985-08-19")
unclass(x)
unclass(as.Date("1985-08-19"))
months(as.Date("1985-08-19"))
Sys.time()
?strptime
swirl()
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
0
exit()
0
0
0
0
0
0
0
0
plAY()
play()
nxt()
exit()
exit
0
quit
swirl()
